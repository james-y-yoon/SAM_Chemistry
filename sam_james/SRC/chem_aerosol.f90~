module chem_aerosol

   ! Add aerosol chemistry products
   integer, parameter :: narchem_fields = 2
   integer :: iTETROLr = 1
   integer :: iIEPOX_SO4r = 2
   real,  parameter, dimension(narchem_fields) :: &
        molwt_ar = (/136.15, 216.123/) ! g/mol   

   logical, dimension(narchem_fields), public :: flag_archemvar_out3D  ! which aqueous chem array to  output

   character(LEN=7), parameter, dimension(narchem_fields) :: &
        ar_species_names = (/'TETROLr', 'IPXSO4r'/)

   
  contains 


  
subroutine iepox_aero_transfer_rate(nzm, T, p, R_inorg, H, actH, SO4, HSO4, OrgMF, override_gamma, transfer_rate, rho_aerosol, debug_print)

  implicit none
  integer, intent(in) :: nzm   ! number of vertical grid levels  
  real, dimension(1:nzm), intent(in) :: T   !  K 
  real, dimension(1:nzm), intent(in) :: p   ! atm
  real, dimension(1:nzm), intent(in) :: R_inorg  ! Inorganic aerosol radius (m)
  real, dimension(1:nzm), intent(in) :: H   !  M of H+
  real, dimension(1:nzm), intent(in) :: SO4   !  M  of nucleophile SO4-2
  real, dimension(1:nzm), intent(in) :: HSO4   !  M of general acid HSO4-
  real, intent(in) :: OrgMF  !Organic mass fraction
  logical, intent(in) :: override_gamma  ! use specified gamma values
  real, dimension(1:nzm), intent(out) :: transfer_rate  !  transfer rate /s
  real, dimension(1:nzm), intent(out) :: rho_aerosol  !  mean aerosol density kg/m3

  integer :: k
  logical :: debug_print

  real :: Ma, actH, a, R, R2, Haq, Horg, kh, kso4, khso4, Ha
  real :: rho_org_aerosol, rho_inorg_aerosol
  real :: pi = 3.1415927
  
  real, dimension(1:nzm) :: Dorg, w, Vinorg, Minorg, Morg, Vorg, Vtot, Rtot, Lorg
  real, dimension(1:nzm) :: Dg, Sa, Kaq, faqH, faqSO4, Aq_inverse, Org_inverse, Gamma_inverse, gamma, Kmta
  
   
    ! constants
    Ma = 0.1191390 !kg/mol - mass of IEPOX
    Dg = 1.e-5/p !m2/s
 
    a = 1 !no units - mass accomodation
    
    R = 0.082057 !L*atm/k*mol
    R2 = 8.314 ! J/kg
    Haq = 1e6 !M/atm - henrys law constant for IEPOX
    Horg = 6e5 !M/atm - henrys law for org layer
    
    kh = 3.6*(1e-2) !M-1s-1 - rate constant of H3O+
    kso4 = 1*(1e-4) !M-1s-1 - ballpark - rate constant of nucleophile SO4-2
    khso4 = 7.3*(1e-4) !M-1s-1 rate consant of general acid HSO4- 
    
    Ha = 1.e8 !M/atm - henrys law constant - value for IEPOX from gaston 
        
    rho_org_aerosol = 0.9   ! g/m3
    rho_inorg_aerosol = 1.5  ! g/m3

    
    Dorg = 100*((1.38e-23)*T)/(6*3.1315*(Rtot)*(315e-12)) !cm2/s - k*t/6*pi*viscosity*radius - diffusion of IEPOX in org
    w = ((8*R2*T)/(pi*Ma))**0.5  !m/s 
    

    Vinorg = 4*pi*(R_inorg**3)/3 !m3 - volume inorganic
    Minorg = Vinorg*rho_inorg_aerosol !mass inorganic
    Morg = Minorg/(1/OrgMF-1) !mass organic
    Vorg = Morg/rho_org_aerosol !m3 - volume organic
    Vtot = Vinorg + Vorg !m3 - volume total
    Rtot = (3.*Vtot/(4.*pi))**(1./3.) !m - radius total
    Lorg = Rtot - R_inorg !m - thickness of organic coating
    Sa = 4*pi*Rtot**2 !m2 - surface area of particles
    Kaq = (kh*H) + (kso4*SO4*actH) + (khso4*HSO4) !s-1 - reaction rate constant from gaston
    faqH = (kh*H)/Kaq
    faqSO4 = ((kso4*SO4*actH) + (khso4*HSO4))/Kaq
    Aq_inverse = (Sa*w)/(4*Vtot*R*T*Haq*Kaq) !1/aq     
    Org_inverse = ((w*Lorg)/(4*R*T*Horg*Dorg))*(Rtot/R_inorg) !1/org
    Gamma_inverse = ((Rtot*w)/(4*Dg))+(1/a)+(Aq_inverse)+(Org_inverse) !1/gamma

    if (override_gamma) then
       if (OrgMF > 0.5) then
          Gamma_inverse = 1./1.e-3
       else
          Gamma_inverse = 1./1.e-2
       end if
    end if   

    if (debug_print) then
       do k=1,nzm
          write(*,*) 'k, Rtot, Dg, Gamma_inverse, w, Sa , Vtot, R_inorg= ', k, Rtot(k), Dg(k), Gamma_inverse(k), w(k), Sa(k), Vtot(k), R_inorg(k)
       end do
    end if
 
    Kmta = ((Rtot/Dg)+(4*Gamma_inverse/w))**(-1) !s-1 - mass transfer coefficient

    do k = 1,nzm
       transfer_rate(k) = Sa(k)*Kmta(k)
       rho_aerosol(k) = (Morg(k) + Minorg(k))/Vtot(k)
    end do
    
  end subroutine iepox_aero_transfer_rate

end module chem_aerosol  
